package com.pru.testscripts;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

import org.apache.commons.io.FileUtils;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Parameters;

import com.pru.utilities.ConfigProperties;
import com.pru.utilities.ExtentReport;
import com.pru.utilities.PageInitiator;
import com.pru.utilities.TestDataProvider;

import static java.nio.file.StandardCopyOption.*;


public class BaseTest extends PageInitiator{

	@BeforeMethod
	@Parameters({"TestId", "osbrowserVersion"})
	public void initializeTestBaseSetup(String TestId, String osBrowserVersion) {
		try {
			if(ConfigProperties.CloudTesting==true){
				currentexecutionlog("Initiating  Test Execution on Browser Stack for Test ID : "+ TestId);
				System.out.println("Initiating  Test Execution on Browser Stack for Test ID : "+ TestId);
				browserStackSetup(osBrowserVersion,TestId);					//Creating Remote driver Instance	on browser stack
				if(driver==null) browserStackSetup(osBrowserVersion,TestId);
			}else{
				currentexecutionlog("Initiating Test Execution on <B class=blue>Local Grid</B> for Test ID:  "+ TestId);
				System.out.println("Initiating Test Execution on Local Grid for Test ID:  "+ TestId);
				webDriverSetup(osBrowserVersion,TestId);					//Creating Remote driver Instance	
				if(driver==null) {
					System.out.println("driver null..........................");
					webDriverSetup(osBrowserVersion,TestId);
				}
			}
			setTestdata(TestDataProvider.getTestData(TestId,osBrowserVersion)); 
			System.out.println(Testdata);
			initiatePage();
			startTestReport(TestId);
		} catch (Exception e) {
			System.out.println("Error....." + e.getMessage());
		}
	}

	@AfterMethod
	@Parameters({"TestId"})
	public static void afterMethod(ITestResult result,String TestId) throws IOException, InterruptedException{
		System.out.println("Inside @AfterMethod");
		System.out.println("failStepCount : " + failStepCount);
		if(failStepCount>0){
			currentexecutionlog("Test case execution completed for test case id: <B> "+ TestId + "</B> Status : <B class=red>FAILED</B>");
		}else{
			currentexecutionlog("Test case execution completed for test case id:  <B> "+ TestId + "</B> Status : <B class=green>PASSED</B>");
		}
		
		endTestReport(result, driver);
		//driver.manage().deleteAllCookies();
		closeDriver();
	}	
}
