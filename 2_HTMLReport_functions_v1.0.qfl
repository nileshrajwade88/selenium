'# ********************************************************************************************
'  Define global variable for HTML function library
'# ********************************************************************************************
Public g_int_Pass
Public g_int_Fail
Public g_int_Warning
Public g_dict_TCPrevNext
Public g_int_testcaseno
Public g_obj_SummaryReport
Public g_obj_TCReport
Public g_obj_logfile
Public g_int_StepsPassed
Public g_int_StepsFailed
Public g_int_StepsWarning
Public g_int_TCStepNo
Public g_str_ScreenShot
Public g_str_TCStartTime
Public g_str_TCEndTime
Public g_int_Steplevel1 
Public g_int_Steplevel2 
Public g_int_Steplevel3 
Public g_str_steptoupdate
Public g_str_TCStatus

'# ********************************************************************************************
'# Function/Sub Name        : func_html_startSummaryReport
'# Purpose                  : starts summary report
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 16-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************

Public Function func_html_startSummaryReport()
	Dim l_str_reportpath
	
	Dim l_str_logfile
	Dim l_str_summaryreport

	Dim l_str_TCs
	Dim l_arr_TCs
	Dim l_str_packtype
	
	
	
	If Environment("TestResultPath") = "" Then
		l_str_reportpath = Environment("g_env_BaseFolder") & "\TEST_RESULTS"
	Else
		l_str_reportpath = Environment("TestResultPath")
	End If	

	Environment("g_env_reportstrtime") = Day(Now) & "_" & MonthName(Month(Now), true) & "_" & Year(Now) & "_" & Hour(Now) & "_" & Minute(Now) & "_" & Second(Now)
	Environment("g_env_RunReportDirectory") = Environment("Project_Name") & "_" & Environment("RunMethod") & "_" & Environment("g_env_reportstrtime")
	
	'create result session folder
	Call func_Utility_Create_Folder(l_str_reportpath & "\" & Environment("g_env_RunReportDirectory"))
	Environment("g_env_CurrentReportDirectory") = l_str_reportpath & "\" & Environment("g_env_RunReportDirectory")
	
	'create log file
	If strComp(LCase(Environment("FrameworkLogs")),LCase("Enabled")) = 0 Then
		l_str_logfile = l_str_reportpath & "\" & Environment("g_env_RunReportDirectory") & "\log.html"
		Set g_obj_logfile = func_utility_createandgetFileObj(l_str_logfile)
	End If
	
	' create summary report file
	l_str_summaryreport = l_str_reportpath & "\" & Environment("g_env_RunReportDirectory") & "\SummaryReport_Run_" & Environment("RunMethod") & "_" & Environment("g_env_reportstrtime") & ".html"
	Environment("g_env_summaryreport") = l_str_summaryreport
	Set g_obj_SummaryReport = func_utility_createandgetFileObj(l_str_summaryreport)
	
	'get start time for summary report
	Environment("g_env_starttime") = now()
	
	'Inittialize counts
	 g_int_Pass = 0
 	 g_int_Fail = 0
   	 g_int_Warning = 0
   	 
   	 g_int_testcaseno =1
   	 
   	 'Write summary page header
   		sub_html_summaryHeader
   	 
   	  'To create an array of test cases to be executed
   	  l_str_TCs = ""
   	  l_str_packtype = Environment("PackType") & "_Pack"
   	  l_int_rowcount =  DataTable.GetSheet("Main").GetRowCount
   	  For l_int_iterator = 1 To l_int_rowcount   	  
   	  	If (LCase(DataTable.GetSheet("Main").GetParameter(l_str_packtype).ValueByRow(l_int_iterator)) = LCase("Yes")) OR (LCase(DataTable.GetSheet("Main").GetParameter(l_str_packtype).ValueByRow(l_int_iterator)) = LCase("Y")) Then
   	  		If l_str_TCs = "" Then
   	  			l_str_TCs = DataTable.GetSheet("Main").GetParameter("TestCase_ID").ValueByRow(l_int_iterator)
   	  		Else
   	  			l_str_TCs = l_str_TCs & "," & DataTable.GetSheet("Main").GetParameter("TestCase_ID").ValueByRow(l_int_iterator)
   	  		End If
   	  	End If
   	  	If LCase(DataTable.GetSheet("Main").GetParameter("Module").ValueByRow(l_int_iterator)) = "eof" Then
				Exit For
		End If
   	  Next
   	  
   	 l_arr_TCs = Split(l_str_TCs,",")
   	 
   	 Set g_dict_TCPrevNext = CreateObject("Scripting.Dictionary")
   	 
   	 For l_int_Iterator = 0 To UBound(l_arr_TCs)
   	 	If l_int_Iterator = 0 and UBound(l_arr_TCs) > 0 Then
   	 		l_str_prev = ""
   	 		l_str_next = l_arr_TCs(l_int_Iterator + 1) & "_" & Environment("g_env_reportstrtime")
   	 	ElseIf l_int_Iterator = UBound(l_arr_TCs) and UBound(l_arr_TCs) > 0 Then
   	 		l_str_prev = l_arr_TCs(l_int_Iterator - 1) & "_" & Environment("g_env_reportstrtime")
   	 		l_str_next = ""
   	 	ElseIf  UBound(l_arr_TCs) > 0 Then
   	 		l_str_prev = l_arr_TCs(l_int_Iterator - 1) & "_" & Environment("g_env_reportstrtime")
   	 		l_str_next = l_arr_TCs(l_int_Iterator + 1) & "_" & Environment("g_env_reportstrtime")
   	 	End If
   	 	
   	 	If UBound(l_arr_TCs) > 0 Then
			g_dict_TCPrevNext.Add l_arr_TCs(l_int_Iterator), l_str_prev & "," & l_str_next  
		End If
   	 Next
   	 
   	 func_updateLog("*******************************************************************************")
	func_updateLog("Executing <b>"& Environment("Project_Name") & " - " & Environment("PackType") & "</b> Pack for <b>" & Environment("Release") & "</b> Release"   )
	func_updateLog("Execution started .. ")
	func_updateLog("*******************************************************************************")
   	 
   	 func_html_startSummaryReport = true
End Function

'# ********************************************************************************************
'# Function/Sub Name        : sub_html_commonpageheader
'# Purpose                  : Page header common across report pages
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 16-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Private Sub sub_html_commonpageheader(ByRef l_obj_html)
	 l_obj_html.WriteLine "<hr class=""divline"">"
	 l_obj_html.WriteLine "<table class=""reportheader""><tr>"
	 l_obj_html.WriteLine vbTab & "<td height=65px><img src ='..\RESOURCES\logo.gif' >"
	 l_obj_html.WriteLine vbTab & "<td height=65px align=right>" & Environment("Project_Name") & "</td>"
	 l_obj_html.WriteLine "</tr></table><hr class=""divline""><BR>"
End Sub

'# ********************************************************************************************
'# Function/Sub Name        : sub_html_summaryHeader
'# Purpose                  : Create Summary report header
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 16-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Private Sub sub_html_summaryHeader()
	g_obj_SummaryReport.WriteLine "<html>"
	g_obj_SummaryReport.WriteLine "<!-- saved from url=(0014)about:internet -->"
	g_obj_SummaryReport.WriteLine "<body bgcolor='WHITE'>"
	g_obj_SummaryReport.WriteLine "<head>"
	g_obj_SummaryReport.WriteLine "<meta http-equiv=""refresh"" content=""" & Environment("AutoRefreshResultSummary") & """>"
	g_obj_SummaryReport.WriteLine "<link rel=""stylesheet"" href=""../RESOURCES/StyleSheet.css"" type=""text/css""/>"
	g_obj_SummaryReport.WriteLine "<script type=""text/javascript"" src=""../RESOURCES/loader.js""></script>"
	g_obj_SummaryReport.WriteLine "<script type=""text/javascript"">"
	g_obj_SummaryReport.WriteLine vbTab & "google.charts.load(""current"", {packages:[""corechart""]});"
	g_obj_SummaryReport.WriteLine vbTab & "google.charts.setOnLoadCallback(drawChart);"
	g_obj_SummaryReport.WriteLine vbTab & "function drawChart() {"
	g_obj_SummaryReport.WriteLine vbTab & "var data = google.visualization.arrayToDataTable(["
	g_obj_SummaryReport.WriteLine vbTab & "['Status', 'Number'],"
	g_obj_SummaryReport.WriteLine vbTab & "['Pass', 0],"
	g_obj_SummaryReport.WriteLine vbTab & "['Fail', 0],"
	g_obj_SummaryReport.WriteLine vbTab & "]);"
	g_obj_SummaryReport.WriteLine vbTab & "var options = {"
	g_obj_SummaryReport.WriteLine vbTab & "colors: ['#00ff00', '#ff3300'],"
	g_obj_SummaryReport.WriteLine vbTab & "legend: 'label',"
	g_obj_SummaryReport.WriteLine vbTab & "is3D: true,"
	g_obj_SummaryReport.WriteLine vbTab & "};"
	g_obj_SummaryReport.WriteLine vbTab & "var chart = new google.visualization.PieChart(document.getElementById('piechart_3d'));"
	g_obj_SummaryReport.WriteLine vbTab & "chart.draw(data, options);"
	g_obj_SummaryReport.WriteLine vbTab & "}"
	g_obj_SummaryReport.WriteLine "</script>"
	g_obj_SummaryReport.WriteLine "</head>"
	
	' Common header
	sub_html_commonpageheader(g_obj_SummaryReport)
	' summary table
	g_obj_SummaryReport.WriteLine "<div class=""reportsection"" style=""padding-top:108px"">"
	g_obj_SummaryReport.WriteLine "<hr class=""divline""> <BR>"
	g_obj_SummaryReport.WriteLine "<div class=""summarysection"">"
	g_obj_SummaryReport.WriteLine "<div style=""float:left;border:1px solid #e6e6ff"">"
	g_obj_SummaryReport.WriteLine "<table class=""pfsummary"">"
	g_obj_SummaryReport.WriteLine "<tr><td colspan=2 class=""tsheader"" style=""border:1px solid #FFFFFF;"">Test Cases Summary</td></tr>"
	g_obj_SummaryReport.WriteLine "<tr bgcolor=""#e6e6ff"">"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""pfhead"">Total Test Cases</td><td class=""pfind"">0</td>"
	
	g_obj_SummaryReport.WriteLine "</tr><tr bgcolor=""#ccffcc"">"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""pfhead"">Passed</td><td class=""pfind"">0</td>"
	
	g_obj_SummaryReport.WriteLine "</tr><tr bgcolor=""#ffe4b3"">"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""pfhead"">Passed with Warnings</td><td class=""pfind"">0</td>"
	
	g_obj_SummaryReport.WriteLine "</tr><tr bgcolor=""#ffcccc"">"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""pfhead"">Failed</td><td class=""pfind"">0</td>"
	
	g_obj_SummaryReport.WriteLine "</tr></table>"
	g_obj_SummaryReport.WriteLine "</div>"
	'graph code
	g_obj_SummaryReport.WriteLine "<div  id=""piechart_3d"" style=""width: 300px; height: 105px; float:right;"">"
	g_obj_SummaryReport.WriteLine "</div>"
	g_obj_SummaryReport.WriteLine "<div style=""float:right;border:1px solid #e6e6ff"">"
	'execution time table
	g_obj_SummaryReport.WriteLine "<table class=""tbtime"">"
	g_obj_SummaryReport.WriteLine "<tr><td colspan=2 class=""tsheader"" style=""border:1px solid #FFFFFF;"">Execution Time</td></tr><tr>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""pfhead"" >Start Time</td>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""pfind"">" & Environment("g_env_starttime") & "</td>"
	g_obj_SummaryReport.WriteLine "</tr><tr>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""pfhead"" >End Time</td><td class=""pfind""></td>"
	
	g_obj_SummaryReport.WriteLine "</tr><tr>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""pfhead"" >Duration</td><td class=""pfind""></td>"
	
	g_obj_SummaryReport.WriteLine "</tr></table>"
	g_obj_SummaryReport.WriteLine "</div>"
	g_obj_SummaryReport.WriteLine "</div>"
	g_obj_SummaryReport.WriteLine "<BR>"
	
	g_obj_SummaryReport.WriteLine "<div>"
	g_obj_SummaryReport.WriteLine "<table class=""teststeps"">"
	g_obj_SummaryReport.WriteLine "<thead class=""steps"" >"
	g_obj_SummaryReport.WriteLine "<tr style=""border:1px solid #e6e6e6;"">"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsheader"" width=50px>SNo</td>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsheader"" width=200px>Test Case</td>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsheader"" width=300px>Description</td>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsheader"" width=50px>Steps</td>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsheader"" width=50px>Passed</td>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsheader"" width=50px>Warnings</td>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsheader"" width=50px>Failed</td>"
	g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsheader"" width=50px>Status</td>"
	g_obj_SummaryReport.WriteLine "</tr>"
	g_obj_SummaryReport.WriteLine "</thead>"
	g_obj_SummaryReport.WriteLine "<tbody class=""steps"">"
End Sub

'# ********************************************************************************************
'# Function/Sub Name        : sub_html_testcases
'# Purpose                  : Write test cases status on summary report
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 16-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Private Sub sub_html_testcases()
	If g_str_micstatus = micPass and g_int_StepsFailed = 0 and g_int_StepsWarning = 0 Then
		g_obj_SummaryReport.WriteLine "<tr bgcolor=""#e6ffe6"" class=""steps"" onclick=""window.document.location='\" & Environment("g_env_CurrTestCaseName")& "_" & Environment("g_env_reportstrtime") & ".html'"" style=""cursor:pointer;"">"
	ElseIf g_int_StepsFailed <>0 Then
		g_obj_SummaryReport.WriteLine "<tr bgcolor=""#ffe6e6"" class=""steps"" onclick=""window.document.location='\" & Environment("g_env_CurrTestCaseName")& "_" & Environment("g_env_reportstrtime") & ".html'"" style=""cursor:pointer;"">"
	End If
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsind"" width=50px>" & g_int_testcaseno & "</td>"
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsgen"" width=200px>" & Environment("g_env_CurrTestCaseName") & "</td>"
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsgen"" width=300px>" & Environment("g_env_CurrTestCaseDesc") & "</td>"
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsind"" width=50px>" & g_int_StepsPassed + g_int_StepsFailed + g_int_StepsWarning & "</td>"
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsind"" width=50px>" & g_int_StepsPassed & "</td>"
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsind"" width=50px>" & g_int_StepsWarning & "</td>"
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsind"" width=50px>" & g_int_StepsFailed & "</td>"
		
	If g_str_micstatus = micPass and g_int_StepsFailed = 0 and g_int_StepsWarning = 0 Then
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsind"" width=50px>Pass</td>"
		g_int_StepsPassed = g_int_StepsPassed + 1
	ElseIf g_int_StepsFailed <>0 Then
		g_obj_SummaryReport.WriteLine vbTab & "<td class=""tsind"" width=50px>Fail</td>"
		g_int_StepsFailed = g_int_StepsFailed + 1
	Else
		g_int_StepsWarning = g_int_StepsWarning + 1
	End If
	g_obj_SummaryReport.WriteLine "</tr>"
End Sub

'# ********************************************************************************************
'# Function/Sub Name        : sub_html_summaryFooter
'# Purpose                  : Create summary report footer
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 16-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Private Sub sub_html_summaryFooter()
	Environment("g_env_EndTime") = Now()
	'update end time and duration	
	Totaltime = Hour(Environment("g_env_EndTime") - Environment("g_env_starttime"))&":"&Minute(Environment("g_env_EndTime") - Environment("g_env_starttime"))&":"& Second(Environment("g_env_EndTime") - Environment("g_env_starttime"))
	Call func_html_updateSummary("<td class=""pfhead"" >End Time</td><td class=""pfind""></td>","<td class=""pfhead"" >End Time</td><td class=""pfind"">" & Environment("g_env_EndTime") & "</td>")
	Call func_html_updateSummary("<td class=""pfhead"" >Duration</td><td class=""pfind""></td>","<td class=""pfhead"" >Duration</td><td class=""pfind"">" & Totaltime & "</td>")
	g_obj_SummaryReport.WriteLine "</tbody>"
	g_obj_SummaryReport.WriteLine "</table>"
	g_obj_SummaryReport.WriteLine "</div>"
	g_obj_SummaryReport.WriteLine "<Br>"
	g_obj_SummaryReport.WriteLine "<hr class=""divline"">"
	sub_html_commonfooter(g_obj_SummaryReport)
	g_obj_SummaryReport.WriteLine "</body>"
	g_obj_SummaryReport.WriteLine "</html>"	
End Sub

'# ********************************************************************************************
'# Function/Sub Name        : func_html_closeSummaryReport
'# Purpose                  : close summary report and opens in IE
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Public Function func_html_closeSummaryReport()
	'update footer
	sub_html_summaryFooter
	
	'close html file
	g_obj_SummaryReport.close
	Set g_obj_SummaryReport= Nothing
	
	If strComp(LCase(Environment("FrameworkLogs")),LCase("Enabled")) = 0 Then
	'close log file
	g_obj_logfile.close
	Set g_obj_logfile= Nothing
	End If
		
	func_html_closeSummaryReport = true
	'auto launch summary report
	sub_showSummaryReport
End Function

'# ********************************************************************************************
'# Function/Sub Name        : func_html_StartTC
'# Purpose                  : Start test case level html report
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************

Public Function func_html_StartTC()
	Dim l_str_TCReportFile


	
	l_str_TCReportFile = Environment("g_env_CurrentReportDirectory") & "\" &  Environment("g_env_CurrTestCaseName")& "_" & Environment("g_env_reportstrtime") & ".html"
	Environment("g_env_TCReport") = l_str_TCReportFile
	
	g_str_TCStatus = g_str_micstatus
	
	Set g_obj_TCReport = func_utility_createandgetFileObj(l_str_TCReportFile)
	'initialize step no
	g_int_TCStepNo = 1
	
	g_int_StepsPassed = 0
	g_int_StepsFailed = 0
	g_int_StepsWarning = 0
	
	g_int_Steplevel1 = 0
	g_int_Steplevel2 = 0
	g_int_Steplevel3 = 0
	
	' write report header
	sub_html_TCReportHeader
	
	g_str_TCStartTime = now()
	
	'update log
	func_updateLog("Test Case Started : " & Environment("g_env_CurrTestCaseName"))
	
	func_html_StartTC = True
End Function

'# ********************************************************************************************
'# Function/Sub Name        : sub_html_TCReportHeader
'# Purpose                  : write test case report header
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Private Sub sub_html_TCReportHeader()
	g_obj_TCReport.WriteLine "<html>"
	g_obj_TCReport.WriteLine "<!-- saved from url=(0014)about:internet -->"
	g_obj_TCReport.WriteLine "<head>"
	g_obj_TCReport.WriteLine "<link rel=""stylesheet"" href=""../RESOURCES/StyleSheet.css"" type=""text/css""/>"
	'java script
	g_obj_TCReport.WriteLine "<script src=""../RESOURCES/jq.js""></script>"
	g_obj_TCReport.WriteLine "<script>"
	g_obj_TCReport.WriteLine "$(document).ready(function() {"
	g_obj_TCReport.WriteLine "function getChildren($row) {"
	g_obj_TCReport.WriteLine "var children = [], level = $row.attr('data-level');"
	g_obj_TCReport.WriteLine " while($row.next().attr('data-level') > level) {"
	g_obj_TCReport.WriteLine " children.push($row.next());"
	g_obj_TCReport.WriteLine " $row = $row.next();"
	g_obj_TCReport.WriteLine "}"
	g_obj_TCReport.WriteLine "return children;"
	g_obj_TCReport.WriteLine "}"
	g_obj_TCReport.WriteLine " $('.parent').on('click', function() {"
	g_obj_TCReport.WriteLine "  var children = getChildren($(this));"
	g_obj_TCReport.WriteLine "   $.each(children, function() {"
	g_obj_TCReport.WriteLine "   $(this).toggle();"
	g_obj_TCReport.WriteLine " })"
	g_obj_TCReport.WriteLine "   });"
	g_obj_TCReport.WriteLine " })"
	g_obj_TCReport.WriteLine " </script>"
	
	g_obj_TCReport.WriteLine "</head>"
	' Common header
	sub_html_commonpageheader(g_obj_TCReport)
	
	g_obj_TCReport.WriteLine "<div class=""reportsection"">"	
	g_obj_TCReport.WriteLine "<table class=""subheader""  ><tr>"
	g_obj_TCReport.WriteLine "<td width=400px class=""subheader"">Test Case</td>"
	g_obj_TCReport.WriteLine "<td width=900px class=""subheader"">Test Description </td>"
	g_obj_TCReport.WriteLine "</tr>"
	g_obj_TCReport.WriteLine "<tr>"
	g_obj_TCReport.WriteLine "<td width=400px class=""subcontents"">" & Environment("g_env_CurrTestCaseName") & "</td>"
	g_obj_TCReport.WriteLine "<td width=900px class=""subcontents"">" & Environment("g_env_CurrTestCaseDesc") & "</td>"
	g_obj_TCReport.WriteLine "</tr></table> <hr class=""divline""> <BR><BR>"
	g_obj_TCReport.WriteLine "<table  class=""teststeps"" id=""TSResults"">"
	g_obj_TCReport.WriteLine "<thead class=""steps"">"
	g_obj_TCReport.WriteLine "<tr style=""border:1px solid #e6e6e6;"">"
	g_obj_TCReport.WriteLine "<td class=""tsheader"" width=75px>Step #</td>"
	g_obj_TCReport.WriteLine "<td class=""tsheader"" width=155px>Step Description</td>"
	g_obj_TCReport.WriteLine "<td class=""tsheader"" width=285px>Expected Result</td>"
	g_obj_TCReport.WriteLine "<td class=""tsheader"" width=285px>Actual Result</td>"
	g_obj_TCReport.WriteLine "<td class=""tsheader"" width=50px>Status</td>"
	g_obj_TCReport.WriteLine "<td class=""tsheader"" colspan=""3"" , align =""center"" >Screen Shot</td>"
	g_obj_TCReport.WriteLine "</tr>"
	g_obj_TCReport.WriteLine "</thead>"
	g_obj_TCReport.WriteLine "<tbody class=""steps"">"
	
End Sub

'# ********************************************************************************************
'# Function/Sub Name        : sub_html_ReportStep
'# Purpose                  : write test steps
'# Input Parameters         : l_int_steplevel,micStatus,l_str_stepDescr,l_str_ExpectedResult,l_str_actualResult
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************

Public Sub sub_html_ReportStep(l_int_steplevel,micStatus,l_str_stepDescr,l_str_ExpectedResult,l_str_actualResult)
If IsNull(g_obj_TCReport) Then
	Exit Sub
End If
Dim l_int_stepno
g_str_steptoupdate = ""
CurrStepFailed = ""
g_str_ScreenShot = vbNullString
l_int_stepno = func_html_GetStepNo(l_int_steplevel)

'update log
func_updateLog(l_str_actualResult)

g_str_micstatus = micStatus
If micStatus = "" and l_int_steplevel = 1 Then
	g_str_micstatus = micPass
End If

If g_str_micstatus = micFail Then
	CurrStepFailed = "fail"
	Call sub_html_CaptureScreenShot
End If

ClassForStepNo = """" & "tsind" & CurrStepFailed & "level" & l_int_steplevel & """"
	
	If l_int_steplevel = 1 Then
			ClassForStepDesc = """tsgen" & CurrStepFailed & "level1"""
			ClassForIcons = """tsind" & CurrStepFailed & "level1"""
			l_str_Mainstepname  = l_str_stepDescr
			
    Else
			ClassForStepDesc = """tsgen" & CurrStepFailed & """"
			ClassForIcons = """tsind" & CurrStepFailed & """"
	End If
	
	If l_int_steplevel = 1 Then
		g_obj_TCReport.WriteLine  "<tr class=""parent"" data-level=""1"">"
		g_obj_TCReport.WriteLine  vbTab & "<td class=" & ClassForStepNo & " width=75px>" & CStr(l_int_stepno) & "</td>"
	Else
		If l_str_Mainstepname <> "" Then
			If g_str_micstatus = micPass Then
			g_obj_TCReport.WriteLine  vbTab & "<tr bgcolor=""#e6ffe6"" name=""" & l_str_Mainstepname & " class=""child"" data-level=""2"" style=""display:none;"" >"	
			Else
			g_obj_TCReport.WriteLine  vbTab & "<tr bgcolor=""#ffe6e6"" name=""" & l_str_Mainstepname & "  class=""child"" data-level=""2"" style=""display:none;"" >"	
			End If
		Else
			If g_str_micstatus = micPass Then
			g_obj_TCReport.WriteLine  vbTab & "<tr bgcolor=""#e6ffe6"" class=""child"" data-level=""2"" style=""display:none;""  >"	
			Else
			g_obj_TCReport.WriteLine  vbTab & "<tr bgcolor=""#ffe6e6"" class=""child"" data-level=""2"" style=""display:none;""  >"	
			End If
		End If
		g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForStepNo & " width=75px>" & CStr(l_int_stepno) & "</td>"
	End If
	
	g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForStepDesc & " width=155px>" & l_str_stepDescr & "</td>"
	g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForStepDesc & " width=285px>" & l_str_ExpectedResult & "</td>"
	g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForStepDesc & " width=285px>" & l_str_actualResult & "</td>"
	
	If g_str_micstatus = micPass  Then
		If l_int_steplevel = 1 Then
		g_str_steptoupdate = l_int_stepno
			g_obj_TCReport.WriteLine vbTab & "<td class=""tsindlevel1"" width=50px id=""" & CStr(l_int_stepno) & """><font size = 2>Pass</td>"	
			g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForIcons & "  width=50px></td>"
			g_str_steptoupdate = l_int_stepno
			
		Else
			g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForIcons & "  width=50px><font size = 2></td>"	
			g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForIcons & "  width=50px></td>"
			g_int_StepsPassed = g_int_StepsPassed + 1			
		End If	
	ElseIf g_str_micstatus = micFail  Then
		If l_int_steplevel = 1 Then
			g_obj_TCReport.WriteLine vbTab & "<td class=""tsindlevel1"" width=50px id=""" & CStr(l_int_stepno) & """><font size = 2>Fail</td>"
			g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForIcons & "  width=50px></td>"
			g_str_steptoupdate = l_int_stepno
			
		Else
			g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForIcons & "  width=50px><font size = 2></td>"
			g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForIcons & " style=""padding-left:23;""  width=50px><a target=""_blank"" href="".\Screenshots\" & g_str_ScreenShot & """><img class=""screen"" src = ""..\RESOURCES\screenshot.png""></a></td>"
			'update main step 
			g_str_steptoupdate = CInt(l_int_stepno)
			Call func_html_updateTCReport("<td class=""tsindlevel1"" width=50px id=""" & CStr(g_str_steptoupdate) & """><font size = 2>Pass</td>","<td class=""tsindlevel1"" width=50px id=""" & CStr(g_str_steptoupdate) & """><font size = 2>Fail</td>")			
			g_str_TCStatus = micFail			
			g_str_ScreenShot = vbNullString		
			g_int_StepsFailed = g_int_StepsFailed + 1			
		End If
	ElseIf g_str_micstatus = micWarning Then
		If l_int_steplevel = 1 Then
			g_obj_TCReport.WriteLine vbTab & "<td class=""tsindlevel1"" width=50px><font size = 2>Warning</td>"			
			g_obj_TCReport.WriteLine vbTab & "<td class=" & ClassForIcons & "  width=50px></td>"
		Else
			g_obj_TCReport.WriteLine vbTab & "<td  class=" & ClassForIcons & "  width=50px></td>"
			g_obj_TCReport.WriteLine vbTab & "<td  class=" & ClassForIcons & "  width=50px><font size = 2></td>"
			g_int_StepsWarning = g_int_StepsWarning + 1
		End If	
	End If
	g_obj_TCReport.WriteLine "</tr>"
	
	'to update UFT report  
	If l_str_actualResult<>vbNullString Then
				Reporter.ReportEvent g_str_micstatus, l_int_stepno & " " & l_str_stepDescr, "Expected Result: " & l_str_ExpectedResult & ". Actual Result: " & l_str_actualResult
	Else
				Reporter.ReportEvent g_str_micstatus, l_int_stepno & " " & l_str_stepDescr, l_str_ExpectedResult
	End If
	
End Sub

'# ********************************************************************************************
'# Function/Sub Name        : sub_html_CaptureScreenShot
'# Purpose                  : take screen shot for failed test steps
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Public Sub sub_html_CaptureScreenShot()
	
	func_Utility_Create_Folder(Environment("g_env_CurrentReportDirectory") & "\Screenshots")
	
	Dim oWScript

	Set oWScript = CreateObject("Wscript.Shell")
	
	If g_str_ScreenShot = vbNullString Then 
		g_str_ScreenShot=Environment("g_env_CurrTestCaseName") & "_" & Hour(Time) & "_" & Minute(Time) & "_" & Second(Time) & ".png"
		Desktop.CaptureBitmap Environment("g_env_CurrentReportDirectory") & "\Screenshots" & "\" & g_str_ScreenShot, True
		Wait(1)
	End If

	Set oWScript = Nothing
	
End Sub

'# ********************************************************************************************
'# Function/Sub Name        : func_html_GetStepNo
'# Purpose                  : get step number(seq) for reporting
'# Input Parameters         : step level
'# Output Parameters        : step number
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Private Function func_html_GetStepNo(ByVal StepLevel)
	If StepLevel=1 Then
		g_int_Steplevel1 = g_int_Steplevel1 + 1
		g_int_Steplevel2 = 0
		g_int_Steplevel3 = 0
		func_html_GetStepNo = g_int_Steplevel1
	ElseIf StepLevel=2 Then
		g_int_Steplevel2 = g_int_Steplevel2 + 1
		g_int_Steplevel3 = 0
		func_html_GetStepNo = g_int_Steplevel1 & "." & g_int_Steplevel2
	ElseIf StepLevel=3 Then
		g_int_Steplevel3 = g_int_Steplevel3 + 1
		func_html_GetStepNo = g_int_Steplevel1 & "." & g_int_Steplevel2 & "." & g_int_Steplevel3
	Else
		func_html_GetStepNo = vbNullString
	End If
End Function

'# ********************************************************************************************
'# Function/Sub Name        : sub_html_TCReportFooter
'# Purpose                  : write test case footer
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Private Sub sub_html_TCReportFooter()
Dim l_str_prevnxt
Dim l_arr_prevnxt

'get summary report file name
Dim l_str_summaryreportname 
l_str_summaryreportname_tmp = Split(Environment("g_env_summaryreport"),"\")
l_str_summaryreportname = l_str_summaryreportname_tmp(UBound(l_str_summaryreportname_tmp))


		g_obj_TCReport.WriteLine "<table width='975px'>"
		g_obj_TCReport.WriteLine "<tr>"
		
			g_obj_TCReport.WriteLine vbTab & "<td width='100%' align='left'>"
			g_obj_TCReport.WriteLine vbTab & "<a href=" & l_str_summaryreportname & "><img src=""..\RESOURCES\home.png"" /></a>"
			

	If g_dict_TCPrevNext.Count <> 0 Then
		l_str_prevnxt = g_dict_TCPrevNext(Environment("g_env_CurrTestCaseName"))
		l_arr_prevnxt = Split(l_str_prevnxt,",")		
		
		
			
			If l_arr_prevnxt(0) <> "" Then								
				g_obj_TCReport.WriteLine vbTab & "<img src=""..\RESOURCES\divider.png"" />"
				g_obj_TCReport.WriteLine vbTab & "<a  href=" & l_arr_prevnxt(0) & ".html><img src=""..\RESOURCES\prev.png""/></a></td>"
			End If
			If l_arr_prevnxt(1) <> "" Then			
				g_obj_TCReport.WriteLine vbTab & "</td>"
				g_obj_TCReport.WriteLine vbTab & "<td width='100%' align='right'>"
				g_obj_TCReport.WriteLine vbTab & "<a  href=" & l_arr_prevnxt(1) & ".html><img src=""..\RESOURCES\next.png""/></a></td>"
			End If
			If l_arr_prevnxt(1) = "" AND l_arr_prevnxt(0) = "" Then	
				g_obj_TCReport.WriteLine vbTab & "</td>"
			End If
			g_obj_TCReport.WriteLine "</tr>"
			g_obj_TCReport.WriteLine "</table>"
			
	End If
	
	g_obj_TCReport.WriteLine "<br>"
	'pass fail count
	g_obj_TCReport.WriteLine "<table class=""pfsummary"" style=""position:absolute;left:300px;"">"
	g_obj_TCReport.WriteLine "<tr><td colspan=2 class=""tsheader"">Test Case Summary</td></tr>"
	g_obj_TCReport.WriteLine "<tr bgcolor=""#e6e6ff"">"
	g_obj_TCReport.WriteLine vbTab & "<td class=""pfhead"" width=200px>Total Steps</td>"
	g_obj_TCReport.WriteLine vbTab & "<td class=""pfind"" width=50px>" & g_int_StepsWarning + g_int_StepsFailed + g_int_StepsPassed & "</td>"
	g_obj_TCReport.WriteLine "</tr><tr bgcolor=""#ccffcc"">"
	g_obj_TCReport.WriteLine vbTab & "<td class=""pfhead"" width=200px>Steps Passed</td>"
	g_obj_TCReport.WriteLine vbTab & "<td class=""pfind"" width=50px>" & g_int_StepsPassed & "</td>"
	g_obj_TCReport.WriteLine "</tr><tr bgcolor=""#ffe4b3"">"
	g_obj_TCReport.WriteLine vbTab & "<td class=""pfhead"" width=200px>Warnings</td>"
	g_obj_TCReport.WriteLine vbTab & "<td class=""pfind"" width=50px>" & g_int_StepsWarning & "</td>"
	g_obj_TCReport.WriteLine "</tr><tr bgcolor=""#ffcccc"">"
	g_obj_TCReport.WriteLine vbTab & "<td class=""pfhead"" width=200px>Steps Failed</td>"
	g_obj_TCReport.WriteLine vbTab & "<td class=""pfind"" width=50px>" & g_int_StepsFailed & "</td>"
	g_obj_TCReport.WriteLine "</tr></table>"
	
	' execution time
	g_obj_TCReport.WriteLine "<table class=""tbtime""  style=""position:absolute;left:685px;"">"
	g_obj_TCReport.WriteLine "<tr><td colspan=2 class=""tsheader"">Run Duration</td></tr>"
	g_obj_TCReport.WriteLine "<tr>"
	g_obj_TCReport.WriteLine  vbTab & "<td class=""pfhead"" >Start Time</td>"
	g_obj_TCReport.WriteLine  vbTab & "<td class=""pfind"" >" & g_str_TCStartTime & "</td>"
	g_obj_TCReport.WriteLine "</tr><tr>"
	g_obj_TCReport.WriteLine  vbTab & "<td class=""pfhead"">End Time</td>"
	g_obj_TCReport.WriteLine  vbTab & "<td class=""pfind"" >" & g_str_TCEndTime & "</td>"
	g_obj_TCReport.WriteLine "</tr><tr>"
	Totaltime = Hour(g_str_TCEndTime - g_str_TCStartTime)&":"&Minute(g_str_TCEndTime - g_str_TCStartTime)&":"& Second(g_str_TCEndTime - g_str_TCStartTime)
	g_obj_TCReport.WriteLine  vbTab & "<td class=""pfhead"">Duration</td>"
	g_obj_TCReport.WriteLine  vbTab & "<td class=""pfind"" >" & Totaltime & "</td>"
	g_obj_TCReport.WriteLine "</tr></table> </div >"
	
	g_obj_TCReport.WriteLine "</body> </html>"
	
End Sub

'# ********************************************************************************************
'# Function/Sub Name        : func_html_EndTC
'# Purpose                  : end test case html report
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************

Public Function func_html_EndTC()

	g_obj_TCReport.WriteLine "</tbody>"
	g_obj_TCReport.WriteLine "</table>"
	g_obj_TCReport.WriteLine "<BR>"
	'get end time
	g_str_TCEndTime = Now()
	
	'write tc report footer
	sub_html_TCReportFooter
	
	'close and release report object
	g_obj_TCReport.close
	Set g_obj_TCReport = Nothing
		
	'update Summary report
	sub_html_testcases
	
	'update counts and time for header
	If g_str_TCStatus = micPass Then
	g_int_Pass = g_int_Pass + 1
		Call func_html_updateSummary("['Pass', "&(g_int_Pass - 1)&"],","['Pass', "&(g_int_Pass)&"],")
		Call func_html_updateSummary("<td class=""pfhead"">Passed</td><td class=""pfind"">"&(g_int_Pass - 1)&"</td>","<td class=""pfhead"">Passed</td><td class=""pfind"">"&(g_int_Pass)&"</td>")
	ElseIf g_str_TCStatus = micFail Then		
	g_int_Fail = g_int_Fail + 1 
		Call func_html_updateSummary("['Fail', "&(g_int_Fail - 1)&"],","['Fail', "&(g_int_Fail)&"],")
		Call func_html_updateSummary("<td class=""pfhead"">Failed</td><td class=""pfind"">"&(g_int_Fail - 1)&"</td>","<td class=""pfhead"">Failed</td><td class=""pfind"">"&(g_int_Fail)&"</td>")
	ElseIf g_str_TCStatus = micWarning Then
	g_int_Warning = g_int_Warning + 1
	End If
	Call func_html_updateSummary("<td class=""pfhead"">Total Test Cases</td><td class=""pfind"">"&((g_int_Pass + g_int_Fail + g_int_Warning) - 1)&"</td>","<td class=""pfhead"">Total Test Cases</td><td class=""pfind"">"&(g_int_Pass + g_int_Fail + g_int_Warning)&"</td>")
	
	g_int_testcaseno = g_int_testcaseno + 1
	
	'update log
	func_updateLog("Test Case Ends : " & Environment("g_env_CurrTestCaseName"))
	func_updateLog("*******************************************************************************")
	
	func_html_EndTC = True
End Function

'# ********************************************************************************************
'# Function/Sub Name        : func_html_updateSummary
'# Purpose                  : update summary report to change test case counts and graph
'# Input Parameters         : string to be updated in HTML report
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Public Function func_html_updateSummary(l_str_OldStr,l_str_NewStr)
	g_obj_SummaryReport.close
	Set g_obj_SummaryReport = Nothing
	
	Set fso = CreateObject("Scripting.FileSystemObject")
	Set l_obj_summaryread = fso.OpenTextFile(Environment("g_env_summaryreport"), 1)
	l_str_currentcontent = l_obj_summaryread.ReadAll
	l_obj_summaryread.close
	Set l_obj_summaryread = Nothing
	
	l_str_newcontent = Replace(l_str_currentcontent,l_str_OldStr,l_str_NewStr)
	Set g_obj_Summarywrite = fso.OpenTextFile(Environment("g_env_summaryreport"), 2)
	g_obj_Summarywrite.write l_str_newcontent
	g_obj_Summarywrite.close
	Set g_obj_Summarywrite = Nothing
	
	Set g_obj_SummaryReport = fso.OpenTextFile(Environment("g_env_summaryreport"), 8)
	Set fso= Nothing
End Function

Private sub sub_html_commonfooter(byRef l_obj_html)
l_obj_html.writeline "<br><div style=""color:#bfbfbf;padding-left:450px"">Conceptulised by - Kiran Londhe</div>"
l_obj_html.writeline "<br><div style=""color:#bfbfbf;padding-left:400px"">Best viewed on IE 10 and above,Chrome,Mozilla browsers</div>"
End sub

'# ********************************************************************************************
'# Function/Sub Name        : func_html_updateTCReport
'# Purpose                  : update TC report to change test case status
'# Input Parameters         : string to be updated in HTML report
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Public Function func_html_updateTCReport(l_str_OldStr,l_str_NewStr)
	g_obj_TCReport.close
	Set g_obj_TCReport = Nothing
	
	Set fso = CreateObject("Scripting.FileSystemObject")
	Set l_obj_TCread = fso.OpenTextFile(Environment("g_env_TCReport"), 1)
	l_str_currentcontent = l_obj_TCread.ReadAll
	l_obj_TCread.close
	Set l_obj_TCread = Nothing
	
	l_str_newcontent = Replace(l_str_currentcontent,l_str_OldStr,l_str_NewStr)
	Set g_obj_TCwrite = fso.OpenTextFile(Environment("g_env_TCReport"), 2)
	g_obj_TCwrite.write l_str_newcontent
	g_obj_TCwrite.close
	Set g_obj_TCwrite = Nothing
	
	Set g_obj_TCReport = fso.OpenTextFile(Environment("g_env_TCReport"), 8)
	Set fso= Nothing
	
	
End Function

'# ********************************************************************************************
'# Function/Sub Name        : func_updateLog
'# Purpose                  : log updation based on environment flag
'# Input Parameters         : string to be updated in logs
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 17-Feb-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************

Public Function func_updateLog(l_str_logtext)
	If strComp(LCase(Environment("FrameworkLogs")),LCase("Enabled")) = 0 and l_str_logtext <> "" Then
		If Instr(l_str_logtext,"*****") <> 0 Then
			g_obj_logfile.writeline l_str_logtext & "<br>"
		Else
			g_obj_logfile.writeline Now & " : " & l_str_logtext & "<br>"
		End If
		
		func_updateLog = true
	End If
End Function

'# ********************************************************************************************
'# Function/Sub Name        : sub_showSummaryReport
'# Purpose                  : Auto launch Summary Report
'# Input Parameters         : none
'# Output Parameters        : none
'# Author			        : Kiran Londhe
'# Date Created[dd-mon-yy]  : 18-May-2017
'# Modified By				:
'# Date Modified[dd-mon-yy] :
'# ********************************************************************************************
Public Sub sub_showSummaryReport()
Dim l_obj_ie
Set l_obj_ie = CreateObject("InternetExplorer.Application")
l_obj_ie.Visible = True
l_obj_ie.Navigate Environment("g_env_summaryreport")
While l_obj_ie.ReadyState <> 4 : WScript.Sleep 100 : Wend
Set l_obj_ie = Nothing
End Sub
